###
# Global configuration
###
image: klstech/php-ci:7.4.24

variables:
  APP_ENV: test
  ### Comment the following if not using the mysql service
  MYSQL_DATABASE: unilend
  MYSQL_USER: tests
  MYSQL_ROOT_PASSWORD: rootPassw0rd
  MYSQL_PASSWORD: myPassw0rd
  DATABASE_URL: 'mysql://tests:myPassw0rd@db:3306/unilend?charset=utf8mb4'
  DATABASE_URL_MIGRATION: 'mysql://tests:myPassw0rd@db:3306/unilend?charset=utf8mb4'

cache:
  - &vendors_cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/
  - &composer_cache
    key: composer
    paths:
      - .composer-cache/

.deploy-api:
  # This image is private, credentials are given through DOCKER_AUTH_CONFIG
  image: klstech/ansible-ci:4.6
  cache: []
  before_script:
    - ansible --version
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - |
      if [[ "${CI_ENVIRONMENT_NAME}" = "prod" ]]
      then
        export SSH_PRIVATE_KEY=$SSH_PRIVATE_KEY_PROD
        export ANSIBLE_VAULT_PASS=$ANSIBLE_VAULT_PASS_PROD
        echo "$SSH_KNOWN_HOSTS_PROD" >> ~/.ssh/known_hosts
      elif [[ "${CI_ENVIRONMENT_NAME}" = "preprod" ]]
      then
        echo "$SSH_KNOWN_HOSTS_PREPROD" >> ~/.ssh/known_hosts
      else
        ssh-keyscan "private.${CI_ENVIRONMENT_NAME}.kls-platform.com" >> ~/.ssh/known_hosts
      fi
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - chmod 644 ~/.ssh/known_hosts
    - git clone -b "${ANSIBLE_BRANCH:-master}" --single-branch https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/ca-lending-services/infra.git
    - echo "$ANSIBLE_VAULT_PASS" > infra/.vault_pass
    - cd infra/provisioning || exit 1
    - export DEPLOY_USER="${GITLAB_USER_NAME}"
  script:
    - ansible-playbook -i "inventory/private/${CI_ENVIRONMENT_NAME}.yml" deploy-api.yml --extra-vars="gitBranch=${CI_COMMIT_REF_NAME}"
  tags:
    # this can be overriden, if you specify tags it is replaced, not appended
    - staging-deployment
  when: manual

###
# Job configuration
###
stages:
  - validation
  - test
  - deploy

# Validation

validation:db:
  stage: validation
  services:
    - name: mysql:8.0.20
      alias: db
  before_script:
    - composer config -g cache-dir "$(pwd)/.composer-cache"
    - composer install
  script:
    # Init database
    - php bin/console doctrine:database:drop --force --connection=migration --if-exists
    - php bin/console doctrine:database:create -n --connection=migration
    - php bin/console doctrine:migration:migrate -n
    # need to run messenger:consume to create messenger_messages table
    # we use here the "failed", because the "async" is an "in-memory", which doesn't create the table
    - php bin/console messenger:consume failed --time-limit=1
    # Validate schema
    - php bin/console doctrine:schema:validate

# Testing

test:functional:
  services:
    - name: mysql:8.0.20
      alias: db
  stage: test
  before_script:
  - composer config -g cache-dir "$(pwd)/.composer-cache"
  - composer install
  script:
    - php bin/console doctrine:database:drop --env=test --connection=migration --if-exists --force
    - php bin/console doctrine:database:create --env=test --connection=migration
    - php bin/console doctrine:migration:migrate -n --env=test
    - php bin/console doctrine:fixtures:load --env=test -n --group=test
    - php -dpcov.enabled=1 bin/phpunit --coverage-text --colors=never --testsuite='functional'

test:application:
  ### Uncomment the following if using a database
  # services:
  #   - name: mysql:8.0.20
  #     alias: db
  stage: test
  before_script:
    - composer config -g cache-dir "$(pwd)/.composer-cache"
    - composer install
  script:
    - php -dpcov.enabled=1 bin/phpunit --coverage-text --colors=never --testsuite='unit'

# Deployment

deploy:prod:
  stage: deploy
  extends: .deploy-api
  environment:
    name: prod
    url: https://api.kls-platform.com
  tags:
    - prod-deployment
  only:
    refs:
      - /^[1-9][0-9]*\.[0-9]+\.[0-9]+$/

deploy:preprod:
  stage: deploy
  extends: .deploy-api
  environment:
    name: preprod
    url: https://api.preprod.kls-platform.com
  only:
    refs:
      - /^release/.*/
      - /^hotfix/.*/
      - /^[1-9][0-9]*\.[0-9]+\.[0-9]+$/

deploy:demo:
  stage: deploy
  extends: .deploy-api
  environment:
    name: demo
    url: https://api.demo.kls-platform.com

deploy:integration:
  stage: deploy
  extends: .deploy-api
  environment:
    name: integration
    url: https://api.integration.kls-platform.com
  when: on_success
  only:
    refs:
      - develop

deploy:cg:
  stage: deploy
  extends: .deploy-api
  environment:
    name: cg
    url: https://api.cg.kls-platform.com
