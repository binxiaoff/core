==========================================
Tests
==========================================

Tests are very useful in any application. They help to catch regressions before they make it to deployment and forces us
to better structure the code. They also help to see unwanted impact generated by new features.

Unit Test
===============

Unit testing allow us to quickly test each class in isolation. We use PHPUnit_ to write the tests and
Prophecy_ to mock the dependencies in the tests. Please refer to these tools page for more information.

Creation
--------
To add a unit test, create it under the folder ``tests\Unit``. Suffix the tested classname with Test. Each test class must only
test another class. Respect the folder structure in ``src`` folder. For example,
the class ``Service\Attachment\AttachmentManagerTest`` relates to the class ``Service\Attachment\AttachmentManager``.

The created test class have to extend the class ``PHPUnit\Framework\TestCase``. It adds the needed functions
for testing such as the assertions.

The tested object must not be mocked.

Each method in the test class that has at least one assertion should only call one method from the tested class instance.
This call should be the sole call in the method upon the tested class instance.

Each entry in a data provider should if possible have a key describing the test case for the related dataset.

You may add helper methods should they contribute to  better code comprehension. They should be private.

Do not hesitate to add them !
