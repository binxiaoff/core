# This file is a "template" of which env vars needs to be defined in your configuration or in an .env file
# Set variables here that may be different on each deployment target of the app, e.g. development, staging, production.
# https://symfony.com/doc/current/best_practices/configuration.html#infrastructure-related-configuration

MAINTENANCE_MODE=0

###> symfony/framework-bundle ###
# APP_ENV should be (and is) managed by real env var
APP_ENV=dev
APP_DEBUG=1
# Managed by AWS Secrets Manager in live
APP_SECRET=''
# The symfony doc says: "If you are also using a reverse proxy on top of your load balancer (e.g. CloudFront),
# calling $request->server->get('REMOTE_ADDR') won't be enough, as it will only trust the node sitting directly above your application (in this case your load balancer).
# You also need to append the IP addresses or ranges of any additional proxy (e.g. CloudFront IP ranges) to the array of trusted proxies."
# Since the IP addresses from CloudFront is changing, and our servers on production are in a security group (which receives only the traffic from LB), we trust all proxies.
TRUSTED_PROXIES=0.0.0.0/0
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# For a MySQL database, use: "mysql://db_user:db_password@127.0.0.1:3306/db_name"
# Configure your db driver and server_version in config/packages/doctrine.yaml
# Values for DATABASE_URL are overriden by actual environment variables in the docker stack and AWS
DATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name
DATABASE_URL_MIGRATION=mysql://db_user:db_password@127.0.0.1:3306/db_name
DATABASE_SSL_KEY=''
DATABASE_SSL_CERT=''
DATABASE_SSL_CA=''
###< doctrine/doctrine-bundle ###

###> symfony/mailer ###
MAILER_DSN=smtp://mail:1025
###< symfony/mailer ###

###> mailjet ###
MAILJET_ERROR_DELIVERY=1
# Managed by AWS Secrets Manager in live
MAILJET_API_KEY=''
MAILJET_API_SECRET=''
###< mailjet ###

HOST_APP_URL=app.local.kls-platform.com
HOST_API_URL=api.local.kls-platform.com

REDIS_URL=redis://localhost:6379

###> DocuSign ###
DOCUSIGN_INTEGRATOR_KEY=aef648fb-3903-4db0-b965-c754203c5b50
DOCUSIGN_USER_ID=9d47d383-cebb-4bc7-ac72-8bedc72e9edd
DOCUSIGN_ACCOUNT_HOST=account-d.docusign.com
DOCUSIGN_API_HOST=demo.docusign.net
DOCUSIGN_PRIVATE_KEY=/etc/docusign/id_rsa
DOCUSIGN_PUBLIC_KEY=/etc/docusign/id_rsa.pub
###< DocuSign ###

###> symfony/messenger ###
# Choose one of the transports below
# MESSENGER_DSN=amqp://guest:guest@localhost:5672/%2f/messages
MESSENGER_DSN=doctrine://default
# MESSENGER_DSN=redis://localhost:6379/messages
###< symfony/messenger ###

###> Flysystem ###
# Credentials are managed using an EC2 instance profile on AWS
AWS_S3_REGION=eu-west-1
AWS_S3_BUCKET_USER_ATTACHMENT=''
AWS_S3_BUCKET_GENERATED_DOCUMENT=''
###< Flysystem ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN=^https?://app\.local\.kls-platform\.com(:[0-9]+)?$
###< nelmio/cors-bundle ###

###> lexik/jwt-authentication-bundle ###
# Managed by AWS Secrets Manager in live
JWT_SECRET_KEY=''
JWT_PUBLIC_KEY=''
JWT_PASSPHRASE=''
###< lexik/jwt-authentication-bundle ###

###> slack ###
# Managed by AWS Secrets Manager in live
SLACK_WEBHOOK_URL=''
SLACK_WEBHOOK_URL_SECURITY=''
###< slack ###

###> MaxMind ###
# Used for GeoIp service
MAXMIND_LICENSE_KEY='Zkyfn7MGhJGyPEDX'
###< MaxMind ###

###> File encryption ###
FILE_ENCRYPTION_KEK_FILE=/usr/local/file-master.key
# Managed by AWS Secrets Manager in live
FILE_ENCRYPTION_KEK_PASSPHRASE=''
###< File encryption ###

###> PSN ###
# The public and private keys for sign the xml file (XML Signature)
# For a given p12 key from PSN, please execute the following commands to get base64 strings for the keys
# openssl pkcs12 -in test_psn.p12 -out test_psn.crt.pem -clcerts -nokeys
# openssl pkcs12 -in test_psn.p12 -out test_psn.key.pem -nocerts -nodes
# cat test_psn.crt.pem | base64 | tr -d '\n'
# cat test_psn.key.pem | base64 | tr -d '\n'
PSN_PUBLIC_KEY=QmFnIEF0dHJpYnV0ZXMKICAgIGxvY2FsS2V5SUQ6IDA3IDAwIEE1IDEzIDIyIEI4IDMwIDM1IDIxIDIwIDRDIDk5IDQwIDRCIEE5IEUyIDBFIDhCIDUyIDU4IApzdWJqZWN0PS9DPUZSL1NUPUZyYW5jZS9MPUd1eWFuY291cnQvTz1DcmVkaXQgQWdyaWNvbGUvT1U9Q0EtQ0lCL0NOPVNpZ25hdHVyZSBJQzA0IHBvdXIgaW50ZWdyYXRpb24gUFNOIGRlIHJlNy9lbWFpbEFkZHJlc3M9Y29udGFjdC5QU05AY2EtY2liLmNvbQppc3N1ZXI9L0M9RlIvU1Q9RnJhbmNlL0w9R3V5YW5jb3VydC9PPUNyZWRpdCBBZ3JpY29sZS9PVT1DQS1DSUIvQ049QUMgUFNOIGZvciB0ZXN0cyBvbmx5L2VtYWlsQWRkcmVzcz1jb250YWN0LlBTTkBjYS1jaWIuY29tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEM1RDQ0FzVUNDUURnSys2dXNmelR6REFOQmdrcWhraUc5dzBCQVFzRkFEQ0JwVEVMTUFrR0ExVUVCaE1DClJsSXhEekFOQmdOVkJBZ01Ca1p5WVc1alpURVRNQkVHQTFVRUJ3d0tSM1Y1WVc1amIzVnlkREVZTUJZR0ExVUUKQ2d3UFEzSmxaR2wwSUVGbmNtbGpiMnhsTVE4d0RRWURWUVFMREFaRFFTMURTVUl4SGpBY0JnTlZCQU1NRlVGRApJRkJUVGlCbWIzSWdkR1Z6ZEhNZ2IyNXNlVEVsTUNNR0NTcUdTSWIzRFFFSkFSWVdZMjl1ZEdGamRDNVFVMDVBClkyRXRZMmxpTG1OdmJUQWVGdzB5TURBek1qQXhNekV6TlRaYUZ3MHlNVEF6TWpBeE16RXpOVFphTUlHNk1Rc3cKQ1FZRFZRUUdFd0pHVWpFUE1BMEdBMVVFQ0F3R1JuSmhibU5sTVJNd0VRWURWUVFIREFwSGRYbGhibU52ZFhKMApNUmd3RmdZRFZRUUtEQTlEY21Wa2FYUWdRV2R5YVdOdmJHVXhEekFOQmdOVkJBc01Ca05CTFVOSlFqRXpNREVHCkExVUVBd3dxVTJsbmJtRjBkWEpsSUVsRE1EUWdjRzkxY2lCcGJuUmxaM0poZEdsdmJpQlFVMDRnWkdVZ2NtVTMKTVNVd0l3WUpLb1pJaHZjTkFRa0JGaFpqYjI1MFlXTjBMbEJUVGtCallTMWphV0l1WTI5dE1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVsZXFtSy9YZmFFZVlmQTYzWTAvaGIrNzltd0JGbStRCm5PMG5Cd1pqLzYzQUhyb3orQ3J3aVBVU1pjYTBOUWxTNzE5aERpeVdWUFBpQTNnd2RWME1jdWRlOG5SdTdTVUwKR1RiTHBzak9OdnBhNDlRMGhiNUxUdktHQlVyUzlLYW9GQTJ1c2x1dWswaG5WZWpFRVBmVHZyc0krdXVod0NYMQpoUXQ5WWFRUDAvZG0xNTloemc4MHVlU2tBQmRzU3VsQnRVZkYrVHhLaXJrUGwyanViMHBDM0hWSm5kenJwbTdOCmNZK3J3R0J1Q0Z4NmxOenFCYVVsdHdmL0xteFRreGNYUGg5R0dnYWtYL01pVE9YdnVmNHhDTFdqdEVMTEZZQlkKTzcyL294aUVDWEFiK1lCcUVvQ1Jqc1Jwd0tkM0ZNUktxM2crMmprajZhWER6WmNUd2ViaFlRSURBUUFCTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVZDWEh6d3NaZ2pRcHdnNFllUTNVRmVIQXZqMllkOFAxa2w1MktkSVA0CkFlNTJVM2lDMUZPMnJMa0VVN2tvSWFib3A4NlJhY3ZXS3VKQUVKZXJaZzlhT2MySEk3Y2JScUVJMU5NQmZUdGYKdTNGVDc1aEUzV3JFNFp0U3F3RmoxWjZpbThKTjVrNWR1NXVSSlowclRpdldLeGlNRHNvc1dkZmplaEF4ZVhiRApUUHZFTXpBa2U2ejFodFR6RWlZT1ZRL00waEpIeUVyT0NXUzlrVW8xcjNSOVFOTm0rRmFmMXZrZUVRbFNuMDUrCk9aaFVEWlE0S0RCbDBLZlFMelBCaTlWbnNHZmhyRVIyTnI4OHlYWjQ2RG5YRlQ0bkx1K0Q1cDhCMDQxS1RzQVAKMCtlTmlWdENCdU5CcWs0ZWRadVlQMjB0ZGlpR0lIb2NWQjYvLzFMZFhPcUYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
PSN_PRIVATE_KEY=QmFnIEF0dHJpYnV0ZXMKICAgIGxvY2FsS2V5SUQ6IDA3IDAwIEE1IDEzIDIyIEI4IDMwIDM1IDIxIDIwIDRDIDk5IDQwIDRCIEE5IEUyIDBFIDhCIDUyIDU4IApLZXkgQXR0cmlidXRlczogPE5vIEF0dHJpYnV0ZXM+Ci0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLQpNSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUM2VjZxWXI5ZDlvUjVoCjhEcmRqVCtGdjd2MmJBRVdiNUNjN1NjSEJtUC9yY0FldWpQNEt2Q0k5UkpseHJRMUNWTHZYMkVPTEpaVTgrSUQKZURCMVhReHk1MTd5ZEc3dEpRc1pOc3VteU00MitscmoxRFNGdmt0TzhvWUZTdEwwcHFnVURhNnlXNjZUU0dkVgo2TVFROTlPK3V3ajY2NkhBSmZXRkMzMWhwQS9UOTJiWG4ySE9EelM1NUtRQUYyeEs2VUcxUjhYNVBFcUt1UStYCmFPNXZTa0xjZFVtZDNPdW1iczF4ajZ2QVlHNElYSHFVM09vRnBTVzNCLzh1YkZPVEZ4YytIMFlhQnFSZjh5Sk0KNWUrNS9qRUl0YU8wUXNzVmdGZzd2YitqR0lRSmNCdjVnR29TZ0pHT3hHbkFwM2NVeEVxcmVEN2FPU1BwcGNQTgpseFBCNXVGaEFnTUJBQUVDZ2dFQUpoeWdDN0tMUkdxYnFEUldGZEk1MThVclVHOHVtY1FmczdqZGJwWmtCWHNuCi9DRGhXRFNRRmJMcUhGN1RwTFZQZlIzbzM5bEd0Z0ZiakpJY2R5U2Mwek4zTytlTWVIeEhGTlVjT2ZTQUdNYUQKcUcxU2dMZzI5dUtyZnBHYksrYWFJZC9haHlneFFIWmlqRE9iUmswcHhhekRYVzZzR255cEJwa2UvOFZxWjFPcwoyN2ZtSVcrS3Uzd2dQaFFyUUJyTzlTNWhidWdzVk9USm5QVDMyTkJMNUhpVzJHalZtS3llVlBLS1JQVVA2Ui83CjBzWkIxd3VnMnBmZVkyckR3MjZaTEo3RlpxbUFOS2Vva1JwVy9QUDZiNUgzcEtOWkdNcE8zZ2JlbThPZmdjaksKYStCRWU3WU1INmxiSU5Zb3B5MXBiaUtmSkR1QkJ0c21XaTdyR2NWRE1RS0JnUURzSDZiMUxIOWdpZWNscTJLdAp3Y3U5dHBUZ29FeVFlWkg3WDY2NTRkR0tpUGx1RkFQd25ycU53RzkrS2FRbWZoczN3Y0pWY0NBb2NRcUt1bVJWCmhyVmhoT0NUeTh5M1JCK2k2RjlMTzZHTGdBR2tmTUdPc2xHblBOSUNhL2oyeFQxZE13blB5WUN2V2JYNXlQejAKRTRBOGNCRUJuTGlYRjF5cUFXQlZWdGdRTXdLQmdRREtCMEVLY0JvdFcvQnZaRWhrQUk3VDAvZm9PZEFkSVk1awp4LzBKSUV6YkVqdXk0SS9vbHc0dlVEMXp6allKWTVuY2VwazdWR2NlNjlSOUJleUJlMzNQeWcySkxYbEhoUExMCjJZSDdFQkV1RDRoajdxU21hOU9PL2xwWTI3WkxGTlBieXV0VDJXb1RjdytiUGRrOHNpaFFCRkpJVnVRbEwwRkoKRDVIdlg5SWtHd0tCZ0JDei9IK0RjazlGOGcvOEc3TG03cDZ3OTc4Y0Y4NXdpeDhaR2FjVWpsb2FibXFYQitCUgptaWpFNEI0d20rZ05LNmU2RVNFeUdWUkRDdGZkYjVPTlArOXlFdURobmMycENBUGlKRHVTTUU5Sjh0UEw3M1ZFCnIvb0FsMnFNY01Ra0Y3OHNDUm1seTNDY0MvOXJkRmxmdDhhT3R1VkNUTnlEVG83SUlpUm5URWw1QW9HQkFLOHMKM3c2bjZXclBQNG0yMExZMWJhTHJOeGhibU1MSnAraG5LRmJUZFJDM25LQWI2MnhvSGxxVUh0VGRSeW1ZL1g2WgpwMmcwWlQ0QWlyemxlQTlGL3U4L2FjRTZkdUMydkxoWkgwV014dmpEYXlZTGRTVUFkZTZWU2MybXBVZ3hCUXFkCnhyTnIzM2lCMmxSbnFvZmdpdWZtOTFuV1RmaVlJdW13NEg5SS9MTmxBb0dBZkdEREdDWTZscWQvTGRmaWNlbGoKNHdabUd3UlBQNTRoNmN1b0VqVlFmYkY4YjRJY3AwZWY3b2NzVGtiTlYzNVRsVlJmRFZNSllmUmFpS3c1bFV5aQppT1I2NFVEampxRGpleHBURXV3YXVxMkw3QjB2UzlPYzRBMTZqZ2hodlRVWmxYYVcwa09UVk9YOWhZNlJTUGx1CjBMM2pGSjJ6NnZxc1hiNWFkcjlFYzlvPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
# The uri to which we send the signature request
PSN_BASE_URI=https://r7espace-souscription3.credit-agricole.fr
###< PSN ###
HUBSPOT_API_KEY=
HUBSPOT_BASE_CRM_URI='https://api.hubapi.com/crm/v3/objects/'
HUBSPOT_BASE_INTEGRATION_URI='https://api.hubapi.com/integrations/'

### Define the name of the environment (useful for grouped environments, like staging)
# This variable allows the definition of an app environment without any setup in symfony
# With one value of APP_ENV, you can have several environments defined by KLS_ENV.
# For example, with an APP_ENV of staging, you can have instances with KLS_ENV
# equal to preprod, cg, demo...
# This should always be managed by a real environment variable
KLS_ENV='dev'

TEMP_DIRECTORY='/data/temp'

###> symfony/slack-notifier ###
# SLACK_DSN=slack://TOKEN@default?channel=CHANNEL
###< symfony/slack-notifier ###
