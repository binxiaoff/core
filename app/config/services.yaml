services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $consoleLogger: '@monolog.logger.console'
            $defaultLocale: '%locale%'
            $sharedTemporaryPath: '%path.shared_tmp%'
            $templateMessageFQCN: 'Unilend\SwiftMailer\TemplateMessage'
            $frontUrl: '%router.request_context.scheme%://%url.host_default%'
            $adminUrl: '%router.request_context.scheme%://%url.host_admin%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Unilend\:
        resource: '%kernel.project_dir%/src/*'
        # The directory Unilend contains the legacy bundles. The services are managed by their own configurations.
        exclude: '%kernel.project_dir%/src/{Console,Entity,Migrations,Tests,Unilend,Kernel.php}'

    # Define the memcache adaptor as the application default cache globally in order to have the right adaptor when autowiring Psr\Cache\CacheItemPoolInterface
    # Since we use the cache/adapter-bundle as the cache system, the configuration framework.cache.app won't work.
    # It can be removed once TECH-333 will be done.
    cache.app: '@memcache.default'
    # Define the logger service as public so we can continue to have access to it via $container->get().
    # But $container->get('logger') is deprecated, do not use it any more.
    logger:
        alias: 'monolog.logger'
        public: true

    Mailjet\Client:
        $key: '%mailjet.api_key%'
        $secret: '%mailjet.api_secret%'
        $call: true
        $settings:
            version: '%mailjet.api_version%'

    # Swift Mailer and its bridges
    swiftmailer.spool.db: '@Unilend\SwiftMailer\DatabaseSpool'
    swiftmailer.mailer.default.spool.db: '@Unilend\SwiftMailer\DatabaseSpool'
    swiftmailer.mailer.transport.mailjet: '@Unilend\SwiftMailer\MailjetTransport'
    mailjet: '@Unilend\SwiftMailer\MailjetTransport'

    Unilend\Service\Translation\TranslationLoader:
        tags:
            - { name: translation.loader, alias: db }
