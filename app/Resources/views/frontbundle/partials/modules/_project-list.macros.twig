{# Project List Module #}
{# import 'partials/modules/_project-list.macros.twig' as projectList #}

{# Render project list #}
{# @macro render #}
{# @param {String} id The ID attribute of the project list #}
{# @param {Array} filterItems A list of filterItem to use (see @macro filterItem for schema) #}
{# @param {Array} listItems A list of listItem to use (see @macro listItem for schema) #}
{# @param {Object} options Project list options to customise further #}
{# @param {Object} paginationOptions Object to configure pagination output with #}
{% macro render(id, filterItems, projects, options, paginationOptions) %}
    {% import _self as projectList %}
    {% import 'partials/modules/_pagination.macros.twig' as pagination %}

    {# Default Settings #}
    {% set settings = {
    showMap: true,
    mapview: {},

    showFilters: true,
    showPagination: true,

    markExpired: true,
    markInvolved: true
    } %}

    {# Set options to settings #}
    {% if options is not empty %}
        {% set settings = settings|merge(options) %}
    {% endif %}

    {# Default Pagination Settings #}
    {# See 'partials/modules/_pagination.macros.twig' for more details #}
    {% set paginationSettings = {
    itemLabelSingle: __('', 'projectListPaginationItemLabelSingle'),
    itemLabelPlural: __('', 'projectListPaginationItemLabelPlural'),
    pageUrl: 'page/%index%',
    totalItems: projects|length,
    currentIndex: 1,
    itemsPerPage: 20,
    totalPages: 0,
    includeWrap: true
    } %}

    {# Set paginationOptions #}
    {% if paginationOptions is not empty %}
        {% set paginationSettings = paginationSettings|merge(paginationOptions) %}

        {# Merge into settings so we only transfer one settings object between all module's macros #}
        {% set settings = settings|merge({'paginationSettings': paginationSettings }) %}
    {% endif %}

    <div id="{{ id|default('project-list')|e('html_attr') }}" class="project-list">
        <div class="tabs">
            {% if settings.showMap %}
                <div class="project-list-nav">
                    <ul class="nav nav-tabs">
                        <li role="presentation" class="active">
                            <a href="#project-list-view" role="tab" data-toggle="tab"><span class="icon fa-list"></span><span class="sr-only">{% trans %} project-list_view-list-label {% endtrans %}</span></a>
                        </li>
                        <li role="presentation">
                            <a href="#project-list-map" role="tab" data-toggle="tab"><span class="icon fa-map-marker"></span><span class="sr-only">{% trans %} project-list_view-map-label {% endtrans %}</span></a>
                        </li>
                    </ul>
                </div><!-- /.project-list-nav -->
            {% endif %}
            <div class="project-list-content tab-content">
                <div id="project-list-view" role="tabpanel" class="tab-pane active">
                    {% if settings.showFilters == true and filterItems is not empty %}
                        {{ projectList.renderFilterItems(filterItems, settings) }}
                        {{ projectList.renderListItems(projects, filterItems, settings) }}
                    {% else %}
                        {{ projectList.renderListItems(projects, false, settings) }}
                    {% endif %}

                    {% if settings.showPagination == true %}
                        {{ pagination.render(paginationSettings) }}
                    {% endif %}
                </div><!-- /#project-list-view.tab-pane -->
                {% if settings.showMap %}
                    <div id="project-list-map" role="tabpanel" class="tab-pane">
                        {{ projectList.renderMap(projects, settings) }}
                    </div><!-- /#project-list-map.tab-pane -->
                {% endif %}
            </div><!-- /.project-list-content -->
        </div><!-- /.tabs -->
    </div><!-- /.project-list -->
{% endmacro %}

{# Render list of project list filters #}
{# @macro renderFilterItems #}
{# @param {Array} filtersItems A list of filters to use, e.g. projectList.defaults.filterItems #}
{# @param {Object} settings the Project List's settings #}
{% macro renderFilterItems(filterItems, settings) %}
    {% import _self as projectList %}

    {# Use default filterItems #}
    {% if settings.showFilters == true and filterItems is not empty %}
        <div class="project-list-filters">
            {# Render each filter item #}
            {% for filterItem in filterItems %}
                <div class="project-list-item-{{ filterItem.column|e('html_attr') }} project-list-filter"
                        {% if filterItem.sortBy != false %} data-sortable-by="{{ filterItem.column|e('html_attr') }}"{% endif %}>
                    <a href="javascript:;">
                        <span class="label">{{ filterItem.label }}</span>
                        {% if filterItem.sortBy != false %}
                        <span class="project-list-filter-order"></span>
                        {% endif %}
                    </a>
                </div><!-- /.project-list-filter -->
            {% endfor %}
        </div><!-- /.project-list-filters -->
    {% endif %}
{% endmacro %}

{# Render a single project list filter #}
{# @macro renderfilterItem #}
{# @param {Object} filterItem The filter item to display #}
{# @param {Object} settings the Project List's settings #}
{# @param {Object} paginationSettings the pagination's settings #}
{#{% macro renderFilterItem(filterItem, settings) %}#}
    {#<div class="project-list-item-{{ filterItem.column|e('html_attr') }} project-list-filter"{% if filterItem.sortBy != false %} data-sortable-by="{{ filterItem.column|e('html_attr') }}"{% endif %}>#}
      {#<a href="javascript:;"><span class="label">{{ filterItem.label }}</span>{% if filterItem.sortBy != false %} <span class="project-list-filter-order"></span>{% endif %}</a>#}
    {#</div><!-- /.project-list-filter -->#}
{#{% endmacro %}#}

{# Display project list map view #}
{# @macro renderMap #}
{# @param {Object} settings the Project List's settings #}
{% macro renderMap(listItems, settings, paginationSettings) %}
    {% import _self as projectList %}
    {% import 'partials/modules/_pagination.macros.twig' as pagination %}

    <div class="project-list-map">
        <div id="project-list-map-view" class="project-list-map-view ui-has-mapview" {# data-mapview #}
        {% if settings.mapview is defined %}="{{ settings.mapview|json_encode|escape('html_attr') }}"{% endif %}>
        </div>
    <div class="project-list-map-list">
        <ul class="list-projects">
            {% for i, listItem in listItems if listItems is not empty %}
                {{ projectList.renderMapListItem(listItem, settings) }}

            {% else %}
                <li class="project project-empty">
                    <p>{% trans %} project-list_map-view-no-projects {% endtrans %}</p>
                </li>
            {% endfor %}

            {# Pagination #}
            {% if listItems is not empty and settings.showPagination == true %}
                {{ pagination.render(paginationSettings) }}
            {% endif %}
        </ul>
    </div>
    </div><!-- /.project-list-map -->
{% endmacro %}

{# Display project list items #}
{# @macro renderListItems #}
{# @param {Array} listItems The list of items to display #}
{# @param {Array} filterItems The list of filters to display #}
{# @param {Object} settings the Project List's settings #}
{% macro renderListItems(projects, filterItems, settings) %}
    {% import _self as projectList %}

    <div class="project-list-items" data-sortable-content>
        {% for project in projects %}
            {# Only show list item if settings support it #}
            {{ projectList.renderListItem(project, filterItems, settings) }}
        {% endfor %}
    </div><!-- /.project-list-items -->
{% endmacro %}

{# Display a single project list item #}
{# @macro renderListItem #}
{# @param {Object} listItem The list item to display #}
{# @param {Object} filterItems The list of filterItems to generate data-sortable-{x} attributes with #}
{# @param {Object} settings the Project List's settings #}
{% macro renderListItem(project, filterItems, settings) %}
    {% import _self as projectList %}

    {# Build data-sortable-{column} attributes #}
    {% set sortAttrs = '' %}
    {% if settings.showFilters == true and filterItems is not empty %}
        {% for filterItem in filterItems %}
            {% if filterItem.sortBy != false %}
                {% set sortAttrs = sortAttrs ~ ' data-sortable-' ~ (filterItem.column|e('html_attr')) ~ '="' ~ (listItem[filterItem.sortBy]|e('html_attr') ~ '"') %}
            {% endif %}
        {% endfor %}
    {% endif %}

    {# Set CSS class to show expired project #}
    {% set classProjectExpired = '' %}
    {% if settings.markExpired == true and project.daysLeft == 0 %}
        {% set classProjectExpired = 'ui-project-expired' %}
    {% endif %}

    {# Set CSS class to show current user is involved in the project #}
    {% set classUserInvolved = '' %}
    {% if settings.markInvolved == true and project.currentUserInvolved == true %}
        {% set classUserInvolved = 'ui-current-user-involved' %}
    {% endif %}

    <article class="project-list-item {{ classProjectExpired }} {{ classUserInvolved }}"{{ sortAttrs }}>
        <div class="project-list-item-category">
            {{ svgimage('#category-' ~ project.company.sector, '', 160, 160) | raw }}
            {% if project.photo_projet is not empty %}
                <div class="project-list-item-image" style="background-image:url('{{ project.photo_projet | completeProjectImagePath | escape('html_attr') }}')">
                    <img src="{{ project.photo_projet | completeProjectImagePath }}" alt="">
                </div>
            {% endif %}
        </div>
        <div class="project-list-item-info">
            <h3 class="project-list-item-title"><a href="{{ project.slug }}">{{ project.title }}</a></h3>
            <div class="project-list-item-meta">
                <h4 class="project-list-item-location">
                    <span class="icon fa-map-marker"></span> {{ project.company.city }}, {{ project.company.zip }}
                </h4>
                <h5 class="project-list-item-cost">{{ project.amount }}€</h5>
            </div>
            <div class="project-list-item-description">
                <p>{{ project.objectif_loan|raw|slice(0, 100) }}&hellip;</p>
            </div>
        </div>
        <div class="project-list-item-stats">
            <div class="project-list-item-interest">{{ project.avg_rate }} %</div>
            <div class="project-list-item-offers">
                <strong>{{ project.number_bids }}</strong> {% transchoice project.number_bids %}project-list_offer-label{% endtranschoice %}
            </div><!-- /.project-list-item-offers -->
            {% if project.currentUser.offers is defined and project.currentUser.offers.total > 0 %}
                {# Mark that Autolend was applied #}
                {% set attrHasAutolend = 'class="project-%list-item-useroffers"' %}
                {% if project.currentUser.offers.autolend is defined and project.currentUser.offers.autolend > 0 %}
                    {% set autolendTooltip %}
                        {% transchoice project.currentUser.offers.autolend with { '%currentUserOffersAutolend%' : project.currentUser.offers.autolend } %}
                        project-list_autolend-tooltip {% endtranschoice %}
                    {% endset %}
                    {% set autolendTooltipHtml = autolendTooltip ~ " <span class='icon fa-autolend-u32 c-p1'></span>" %}
                    {% set attrHasAutolend = 'class="project-list-item-useroffers ui-has-tooltip" data-toggle="tooltip" data-html="true" title="' ~ autolendTooltipHtml ~ '"' %}
                {% endif %}

                <div {{ attrHasAutolend }}>
                    {% for status, numOffers in project.currentUser.offers %}
                        {% if status == 'inprogress' and numOffers > 0 %}
                            <div class="project-list-item-useroffers-accepted">
                                {{ numOffers|__num|nbsp }} {% transchoice numOffers %} project-list_accepted-bids-label {% endtranschoice %}
                            </div>
                        {% elseif status == 'rejected' and numOffers > 0 %}
                            <div class="project-list-item-useroffers-rejected">
                                {{ numOffers|__num|nbsp }} {% transchoice numOffers %} project-list_rejected-bids-label {% endtranschoice %}
                            </div>
                        {% elseif status == 'accepted' and numOffers > 0 %}
                            <div class="project-list-item-useroffers-inprogress">
                                {{ numOffers|__num|nbsp }} {% transchoice numOffers %} project-list_pending-bids-label {% endtranschoice %}
                            </div>
                        {% endif %}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
        <div class="project-list-item-rating">
            <span class="rating rating-{{ project.risk|convertRisk|split('.')|join('-') }}"><span class="sr-only"></span></span>
            {#__('Rated %d out of 5', 'projectListItemRatingLabel')|convertRisk|format(project.risk)#}
        </div>
        <div class="project-list-item-period">
            {% if project.daysLeft > 0 and project.daysLeft <= 2 %}
                <span class="ui-has-timecount" data-timecount-to="{{ project.date_retrait_full|escape('html_attr') }}">&hellip;</span>
            {% elseif project.daysLeft == 0 %}
                {% trans %} project-list_project-finished {% endtrans %}
            {% else %}
                {% trans with {'%remainingDays%' : project.daysLeft } %} project-list_remaining-days {% endtrans %}
            {% endif %}
        </div>
        <div class="project-list-item-view">
            <a href="{{ project.slug }}"><span class="icon fa-angle-right"></span><span class="sr-only">{% trans %} project-list_view-project-label {% endtrans %}</span></a>
        </div>
    </article><!-- /.project-list-item -->
{% endmacro %}

{# Render a single map list item #}
{# @macro renderMapListItem #}
{# @param {Object} listItem The properties for the list item #}
{# @param {Object} settings the Project List's settings #}
{% macro renderMapListItem(project, settings) %}
    {# Set the rating class for the .rating element #}
    {% set classRating = project.risk|convertRisk|split('.')|join('-') %}

    {# Set CSS class to show expired project #}
    {% set classProjectExpired = '' %}
    {% if settings.markExpired == true and project.daysLeft == 0 %}
        {% set classProjectExpired = 'ui-project-expired' %}
    {% endif %}

    {# Set CSS class to show current user is involved in the project #}
    {% set classUserInvolved = '' %}
    {% if settings.markInvolved == true and project.currentUserInvolved == true %}
        {% set classUserInvolved = 'ui-current-user-involved' %}
    {% endif %}

    {# Generate object for mapview to place marker on map #}
    {% if project.lat is defined and project.lng is defined %}
        {# Set the group based on active, expired, or offers inprogress, rejected or accepted #}
        {# @note MapView JS component & CSS relies on two groups named 'active' and 'expired' (case insensitive) #}
        {% set mapviewGroup = (project.daysLeft == 0 ? 'expired' : 'active') %}

        {# Set the offer status to show the icon in the marker #}
        {# @note MapView CSS relies on offerStatuses named 'inprogress', 'rejected' and 'accepted' #}
        {% set mapviewOfferStatus = '' %}
        {% if project.currentUser.offers.total > 0 and project.currentUser.offers is not empty %}
            {% for status, numOffers in project.currentUser.offers if project.currentUser.offers.total > 0 and status is not empty and status != 'rejected' %}
                {% set mapviewOfferStatus = status %}
            {% endfor %}
        {% endif %}

        {% set mapviewItem = {
        id: 'marker' ~ project.id,
        categoryId: project.categoryId,
        latLng: [project.lat, project.lng],
        title: project.title,
        description: '<div style="font-style: italic;">' ~ project.company.city ~ ', ' ~ project.company.zip ~ '</div><div class="rating rating-' ~ classRating ~ '"><span class="sr-only">Rated ' ~ project.rating ~ ' out of 5</span></span></div>',
        status: (project.daysLeft == 0 ? 'expired' : 'active'),
        offerStatus: mapviewOfferStatus|default(''),
        groupName: mapviewGroup|default('all')
        } %}
    {% endif %}

    <li class="project {{ classProjectExpired }} {{ classUserInvolved }}"{% if mapviewItem is defined %} data-mapview-markerid="{{ mapviewItem.id }}" data-mapview-item='{{ mapviewItem|json_encode|escape('html_attr') }}'{% endif %}>
        <div class="project-name"><a href="{{ project.slug }}">{{ project.title }}</a></div>
        <div class="project-location">{{ project.company.city }}, {{ project.company.zip }}</div>
        <div class="project-cost">{{ project.amount|__num|nbsp }}€</div>
        <div class="project-rating">
            <span class="rating rating-{{ project.risk|convertRisk|split('.')|join('-') }}"><span class="sr-only"></span></span>
        </div>
        <div class="project-interest">{{ project.avg_rate|__num(1) }}%</div>
        <div class="project-period">
            {% if project.daysLeft > 0 and project.daysLeft <= 2 %}
                <span class="ui-has-timecount" data-timecount-to="{{ project.date_retrait_full|escape('html_attr') }}">&hellip;</span>
            {% elseif project.daysLeft == 0 %}
                {% trans %} project-list_project-finished {% endtrans %}
            {% else %}
                {% trans with {'%remainingDays%' : project.daysLeft } %} project-list_remaining-days {% endtrans %}
            {% endif %}
        </div>
        <div class="project-offers">
            <strong>{{ project.number_bids }}</strong> {% transchoice project.number_bids %}project-list_offer-label{% endtranschoice %}
            {% if project.currentUserOffers is defined and project.currentUserOffers is not empty and project.currentUserTotalOffers > 0 %}
                {# Mark that Autolend was applied #}
                {% set attrHasAutolend = 'class="project-useroffers"' %}
                {% if project.currentUser.offers.autolend is not empty and project.currentUser.offers.autolend > 0 %}
                    {% set autolendTooltip %}
                        {% transchoice projects.currentUser.offers.autolend with { '%currentUserOffersAutolend%' : projects.currentUser.offers.autolend } %}
                        project-list_autolend-tooltip {% endtranschoice %}
                    {% endset %}
                    {% set autolendTooltipHtml = autolendTooltip ~ " <span class='icon fa-autolend-u32 c-p1'></span>" %}
                    {% set attrHasAutolend = 'class="project-useroffers ui-has-tooltip" data-toggle="tooltip" data-html="true" title="' ~ autolendTooltipHtml ~ '"' %}
                {% endif %}

                <div {{ attrHasAutolend }}>
                    {# Show stats for each type of offer #}
                    {% for status, numOffers in project.currentUser.offers %}
                        {% if status == 'inprogress' and numOffers > 0 %}
                            <div class="project-list-item-useroffers-accepted">
                                {{ numOffers|__num|nbsp }} {% transchoice numOffers %} project-list_accepted-bids-label {% endtranschoice %}
                            </div>
                        {% elseif status == 'rejected' and numOffers > 0 %}
                            <div class="project-list-item-useroffers-rejected">
                                {{ numOffers|__num|nbsp }} {% transchoice numOffers %} project-list_rejected-bids-label {% endtranschoice %}
                            </div>
                        {% elseif status == 'accepted' and numOffers > 0 %}
                            <div class="project-list-item-useroffers-inprogress">
                                {{ numOffers|__num|nbsp }} {% transchoice numOffers %} project-list_pending-bids-label {% endtranschoice %}
                            </div>
                        {% endif %}
                    {% endfor %}
                </div><!-- /.project-useroffers -->
            {% endif %}
        </div>
        <a href="{{ project.slug }}" class="project-hotspot">&nbsp;</a>
    </li>
{% endmacro %}