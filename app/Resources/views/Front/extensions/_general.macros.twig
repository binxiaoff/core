{# General macros #}
{# import 'extensions/_general.macros.twig' as general #}

{# Check if route matches and output the 'active' class #}
{# This is mainly for navigation <LI> elements which only have a single CSS class: either 'active' or empty #}
{# @macro isRouteActiveClass #}
{# @param {String} route The route's URL, e.g. `route('user/preter/dashboard')` #}
{# @param {String} url The URL to match to the route's URL, e.g. `page.permalink` #}
{# @returns {String} #}
{% macro isRouteActiveClass(route, url, hideAttr) %}
{% if route == url %}{% if hideAttr != true %}class="active"{% else %}active{% endif %}{% endif %}
{% endmacro %}

{# Generate a string from an object containing key-value pairs representing html attributes #}
{# @macro attrsString #}
{# @param {Object} attrs An object containing key-value pairs to represent the attributes for the element #}
{% macro attrsString(attrs) %}
  {# Generate attributes string #}
  {% set attrsHtml = '' %}
  {% if attrs is not empty %}
    {% for key, value in attrs %}
      {% set attrsHtml = attrsHtml ~ ' ' ~ key ~ '="' ~ value|escape('html_attr') ~ '"' %}
    {% endfor %}
    {% if attrsHtml is not empty %}{{ attrsHtml }}{% endif %}
  {% endif %}
{% endmacro %}

{# Show a number pip #}
{# If number is greater than 9, then shows a bullet point #}
{# @macro pip #}
{# @param {Int} number #}
{# @param {Boolean} showMany #}
{% macro pip(number, showMany) %}
  {# Default showMany behaviour is true #}
  {% set showMany = (showMany is not empty ? showMany : true) %}
  <span class="pip{% if showMany and number > 9 %} pip-has-many{% endif %}"><span class="pip-number">{{ number }}</span></span>
{% endmacro %}


{# Due to scope issues with Twig and no common way to do it via backend (since there's no backend)
   this macro is only made to consistently render project categories' icons for the frontend build #}
{# @macro projectCategoryIcon #}
{# @param {Int} categoryId The ID of the projectCategory to refer to #}
{# @param {Array} projectCategories The array containing the projectCategory objects to reference (optional) #}
{% macro projectCategoryIcon(categoryId, projectCategories) %}

  {# If can't get the projectCategories from the root scope, refer to these #}
  {% if projectCategories is empty %}
    {% set projectCategories = [{
      name: "none",
      label: "No category",
      description: ""
    },{
      name: "agriculture",
      label: "Agriculture",
      description: ""
    },{
      name: "health",
      label: "Alimentaire",
      description: ""
    },{
      name: "medical",
      label: "Medical Paramedical",
      description: ""
    },{
      name: "transport",
      label: "Transport",
      description: ""
    },{
      name: "textile",
      label: "Textile Vente Transformation",
      description: ""
    },{
      name: "construction",
      label: "BTP Construction",
      description: ""
    },{
      name: "restauration",
      label: "Restauration",
      description: ""
    },{
      name: "hotellerie",
      label: "Hotellerie",
      description: ""
    },{
      name: "it",
      label: "IT Telecommunications",
      description: ""
    },{
      name: "commerce",
      label: "Commerce de Proximite",
      description: ""
    },{
      name: "communication",
      label: "Communication",
      description: ""
    },{
      name: "media",
      label: "Culture Media",
      description: ""
    },{
      name: "industrie",
      label: "Industrie Mechanique",
      description: ""
    },{
      name: "consultation",
      label: "Service Conseils Assurance",
      description: ""
    },{
      name: "autre",
      label: "Autre",
      description: ""
    }] %}
  {% endif %}

  {# Output an SVG image which coincides with the projectCategory #}
  {% set projectCategory = projectCategories[categoryId] %}
  {% if projectCategory is not empty %}
  {{ svgimage('#category-' ~ projectCategory.name, projectCategory.label, 160, 160) | raw }}
  {% else %}
  <span class="icon fa-question-circle" title="Incorrect category ID given"></span><span class="sr-only">Incorrect category ID given</span>
  {% endif %}
{% endmacro %}

{# Country codes for select field #}
{# @macro selectCountryCodeOptions #}
{# @param {String} defaultCountry A two character string matching a country code, e.g. 'FR' #}
{% macro selectCountryCodeOptions(defaultCountry) %}
  {% set countryCodes = {
    'AF': 'Afghanistan',
    'AX': 'Aland Islands',
    'AL': 'Albania',
    'DZ': 'Algeria',
    'AS': 'American Samoa',
    'AD': 'Andorra',
    'AO': 'Angola',
    'AI': 'Anguilla',
    'AQ': 'Antarctica',
    'AG': 'Antigua And Barbuda',
    'AR': 'Argentina',
    'AM': 'Armenia',
    'AW': 'Aruba',
    'AU': 'Australia',
    'AT': 'Austria',
    'AZ': 'Azerbaijan',
    'BS': 'Bahamas',
    'BH': 'Bahrain',
    'BD': 'Bangladesh',
    'BB': 'Barbados',
    'BY': 'Belarus',
    'BE': 'Belgium',
    'BZ': 'Belize',
    'BJ': 'Benin',
    'BM': 'Bermuda',
    'BT': 'Bhutan',
    'BO': 'Bolivia',
    'BA': 'Bosnia And Herzegovina',
    'BW': 'Botswana',
    'BV': 'Bouvet Island',
    'BR': 'Brazil',
    'IO': 'British Indian Ocean Territory',
    'BN': 'Brunei Darussalam',
    'BG': 'Bulgaria',
    'BF': 'Burkina Faso',
    'BI': 'Burundi',
    'KH': 'Cambodia',
    'CM': 'Cameroon',
    'CA': 'Canada',
    'CV': 'Cape Verde',
    'KY': 'Cayman Islands',
    'CF': 'Central African Republic',
    'TD': 'Chad',
    'CL': 'Chile',
    'CN': 'China',
    'CX': 'Christmas Island',
    'CC': 'Cocos (Keeling) Islands',
    'CO': 'Colombia',
    'KM': 'Comoros',
    'CG': 'Congo',
    'CD': 'Congo, Democratic Republic',
    'CK': 'Cook Islands',
    'CR': 'Costa Rica',
    'CI': 'Cote D\'Ivoire',
    'HR': 'Croatia',
    'CU': 'Cuba',
    'CY': 'Cyprus',
    'CZ': 'Czech Republic',
    'DK': 'Denmark',
    'DJ': 'Djibouti',
    'DM': 'Dominica',
    'DO': 'Dominican Republic',
    'EC': 'Ecuador',
    'EG': 'Egypt',
    'SV': 'El Salvador',
    'GQ': 'Equatorial Guinea',
    'ER': 'Eritrea',
    'EE': 'Estonia',
    'ET': 'Ethiopia',
    'FK': 'Falkland Islands (Malvinas)',
    'FO': 'Faroe Islands',
    'FJ': 'Fiji',
    'FI': 'Finland',
    'FR': 'France',
    'GF': 'French Guiana',
    'PF': 'French Polynesia',
    'TF': 'French Southern Territories',
    'GA': 'Gabon',
    'GM': 'Gambia',
    'GE': 'Georgia',
    'DE': 'Germany',
    'GH': 'Ghana',
    'GI': 'Gibraltar',
    'GR': 'Greece',
    'GL': 'Greenland',
    'GD': 'Grenada',
    'GP': 'Guadeloupe',
    'GU': 'Guam',
    'GT': 'Guatemala',
    'GG': 'Guernsey',
    'GN': 'Guinea',
    'GW': 'Guinea-Bissau',
    'GY': 'Guyana',
    'HT': 'Haiti',
    'HM': 'Heard Island & Mcdonald Islands',
    'VA': 'Holy See (Vatican City State)',
    'HN': 'Honduras',
    'HK': 'Hong Kong',
    'HU': 'Hungary',
    'IS': 'Iceland',
    'IN': 'India',
    'ID': 'Indonesia',
    'IR': 'Iran, Islamic Republic Of',
    'IQ': 'Iraq',
    'IE': 'Ireland',
    'IM': 'Isle Of Man',
    'IL': 'Israel',
    'IT': 'Italy',
    'JM': 'Jamaica',
    'JP': 'Japan',
    'JE': 'Jersey',
    'JO': 'Jordan',
    'KZ': 'Kazakhstan',
    'KE': 'Kenya',
    'KI': 'Kiribati',
    'KR': 'Korea',
    'KW': 'Kuwait',
    'KG': 'Kyrgyzstan',
    'LA': 'Lao People\'s Democratic Republic',
    'LV': 'Latvia',
    'LB': 'Lebanon',
    'LS': 'Lesotho',
    'LR': 'Liberia',
    'LY': 'Libyan Arab Jamahiriya',
    'LI': 'Liechtenstein',
    'LT': 'Lithuania',
    'LU': 'Luxembourg',
    'MO': 'Macao',
    'MK': 'Macedonia',
    'MG': 'Madagascar',
    'MW': 'Malawi',
    'MY': 'Malaysia',
    'MV': 'Maldives',
    'ML': 'Mali',
    'MT': 'Malta',
    'MH': 'Marshall Islands',
    'MQ': 'Martinique',
    'MR': 'Mauritania',
    'MU': 'Mauritius',
    'YT': 'Mayotte',
    'MX': 'Mexico',
    'FM': 'Micronesia, Federated States Of',
    'MD': 'Moldova',
    'MC': 'Monaco',
    'MN': 'Mongolia',
    'ME': 'Montenegro',
    'MS': 'Montserrat',
    'MA': 'Morocco',
    'MZ': 'Mozambique',
    'MM': 'Myanmar',
    'NA': 'Namibia',
    'NR': 'Nauru',
    'NP': 'Nepal',
    'NL': 'Netherlands',
    'AN': 'Netherlands Antilles',
    'NC': 'New Caledonia',
    'NZ': 'New Zealand',
    'NI': 'Nicaragua',
    'NE': 'Niger',
    'NG': 'Nigeria',
    'NU': 'Niue',
    'NF': 'Norfolk Island',
    'MP': 'Northern Mariana Islands',
    'NO': 'Norway',
    'OM': 'Oman',
    'PK': 'Pakistan',
    'PW': 'Palau',
    'PS': 'Palestinian Territory, Occupied',
    'PA': 'Panama',
    'PG': 'Papua New Guinea',
    'PY': 'Paraguay',
    'PE': 'Peru',
    'PH': 'Philippines',
    'PN': 'Pitcairn',
    'PL': 'Poland',
    'PT': 'Portugal',
    'PR': 'Puerto Rico',
    'QA': 'Qatar',
    'RE': 'Reunion',
    'RO': 'Romania',
    'RU': 'Russian Federation',
    'RW': 'Rwanda',
    'BL': 'Saint Barthelemy',
    'SH': 'Saint Helena',
    'KN': 'Saint Kitts And Nevis',
    'LC': 'Saint Lucia',
    'MF': 'Saint Martin',
    'PM': 'Saint Pierre And Miquelon',
    'VC': 'Saint Vincent And Grenadines',
    'WS': 'Samoa',
    'SM': 'San Marino',
    'ST': 'Sao Tome And Principe',
    'SA': 'Saudi Arabia',
    'SN': 'Senegal',
    'RS': 'Serbia',
    'SC': 'Seychelles',
    'SL': 'Sierra Leone',
    'SG': 'Singapore',
    'SK': 'Slovakia',
    'SI': 'Slovenia',
    'SB': 'Solomon Islands',
    'SO': 'Somalia',
    'ZA': 'South Africa',
    'GS': 'South Georgia And Sandwich Isl.',
    'ES': 'Spain',
    'LK': 'Sri Lanka',
    'SD': 'Sudan',
    'SR': 'Suriname',
    'SJ': 'Svalbard And Jan Mayen',
    'SZ': 'Swaziland',
    'SE': 'Sweden',
    'CH': 'Switzerland',
    'SY': 'Syrian Arab Republic',
    'TW': 'Taiwan',
    'TJ': 'Tajikistan',
    'TZ': 'Tanzania',
    'TH': 'Thailand',
    'TL': 'Timor-Leste',
    'TG': 'Togo',
    'TK': 'Tokelau',
    'TO': 'Tonga',
    'TT': 'Trinidad And Tobago',
    'TN': 'Tunisia',
    'TR': 'Turkey',
    'TM': 'Turkmenistan',
    'TC': 'Turks And Caicos Islands',
    'TV': 'Tuvalu',
    'UG': 'Uganda',
    'UA': 'Ukraine',
    'AE': 'United Arab Emirates',
    'GB': 'United Kingdom',
    'US': 'United States',
    'UM': 'United States Outlying Islands',
    'UY': 'Uruguay',
    'UZ': 'Uzbekistan',
    'VU': 'Vanuatu',
    'VE': 'Venezuela',
    'VN': 'Viet Nam',
    'VG': 'Virgin Islands, British',
    'VI': 'Virgin Islands, U.S.',
    'WF': 'Wallis And Futuna',
    'EH': 'Western Sahara',
    'YE': 'Yemen',
    'ZM': 'Zambia',
    'ZW': 'Zimbabwe'
  } %}
  {% if defaultCountry is empty %}{% set defaultCountry = 'FR' %}{% endif %}
  {% for code, name in countryCodes %}
    <option value="{{ code }}"{% if defaultCountry == code %} selected{% endif %}>{{ name }}</option>
  {% endfor %}
{% endmacro %}

{# Output <option> elements for the nationalities #}
{# @macro selectNationalityOptions #}
{# @param {Int} defaultNationalityIndex The index of the nationality you which to have selected by default (zero-indexed) #}
{% macro selectNationalityOptions(defaultNationalityIndex) %}
  {% set nationalities = [
    'Française',
    'Américain',
    'Anglais',
    'Autre'
  ] %}
  {% for i, name in nationalities %}
  <option value="{{ i }}"{% if i == defaultNationalityIndex %} selected="selected"{% endif %}>{{ name }}</option>
  {% endfor %}
{% endmacro %}

{# Output <option> elements for the days of a month #}
{# @macro selectDayOptions #}
{# @param {Int} defaultDay The index of the default day to have selected #}
{% macro selectDayOptions(defaultDay) %}
  {% for i in 1..31 %}
  <option value="{{ i }}"{% if i == defaultDay %} selected="selected"{% endif %}>{{ i }}</option>
  {% endfor %}
{% endmacro %}

{# Output <option> elements for the months of the year #}
{# @macro selectMonthOptions #}
{# @param {Int} defaultMonthIndex The index of the default month to have selected (zero-indexed) #}
{% macro selectMonthOptions(defaultMonthIndex) %}
  {% set months = [
    'Janvier',
    'Février',
    'Mars',
    'Avril',
    'Mai',
    'Juin',
    'Juillet',
    'Août',
    'Septembre',
    'Octobre',
    'Novembre',
    'Décembre'
  ] %}
  {% for i, name in months %}
  <option value="{{ i }}"{% if i == defaultMonthIndex %} selected="selected"{% endif %}>{{ name }}</option>
  {% endfor %}
{% endmacro %}

{# Output <option> elements representing the years #}
{# @macro selectYearOptions #}
{# @param {Int} defaultYear The index of the default year to have selected #}
{% macro selectYearOptions(defaultYear, maxYear, minYear) %}
  {% if maxYear is empty %}{% set maxYear = 2016 %}{% endif %}
  {% if minYear is empty %}{% set minYear = 1900 %}{% endif %}
  {% for i in maxYear..minYear %}
  <option value="{{ i }}"{% if i == defaultYear %} selected="selected"{% endif %}>{{ i }}</option>
  {% endfor %}
{% endmacro %}
