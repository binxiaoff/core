{# Project List Module #}
{# @import 'partials/modules/_project-list.macros.twig' as projectList #}

{# Render project list #}
{# @macro render #}
{# @param {String} id The ID attribute of the project list #}
{# @param {Array} filterItems A list of filterItem to use (see @macro filterItem for schema) #}
{# @param {Array} listItems A list of listItem to use (see @macro listItem for schema) #}
{# @param {Object} options Project list options to customise further #}
{# @param {Object} paginationOptions Object to configure pagination output with #}
{% macro render(id, filterItems, projects, options, paginationOptions) %}
    {% import _self as projectList %}
    {% import '@UnilendFrontBundle/partials/modules/_pagination.macros.twig' as pagination %}

    {# Default Settings #}
    {% set settings = {
    showMap: true,
    showFilters: true,
    showPagination: true,

    markExpired: true,
    markInvolved: true
    } %}

    {# Set options to settings #}
    {% if options is not empty %}
        {% set settings = settings|merge(options) %}
    {% endif %}

    {# Default Pagination Settings #}
    {# See 'partials/modules/_pagination.macros.twig' for more details #}
    {% set paginationSettings = {
    itemLabelSingle: __('Project', 'projectListItemTypeSingle'),
    itemLabelPlural: __('Projects', 'projectListItemTypePlural'),
    pageUrl: 'page/%index%',
    totalItems: projects|length,
    currentIndex: 1,
    itemsPerPage: 20,
    totalPages: 0,
    includeWrap: true
    } %}

    {# Set paginationOptions #}
    {% if paginationOptions is not empty %}
        {% set paginationSettings = paginationSettings|merge(paginationOptions) %}

        {# Merge into settings so we only transfer one settings object between all module's macros #}
        {% set settings = settings|merge({'paginationSettings': paginationSettings }) %}
    {% endif %}

    <div id="{{ id|default('project-list')|e('html_attr') }}" class="project-list">
        <div class="tabs">
            {% if settings.showMap %}
                <div class="project-list-nav">
                    <ul class="nav nav-tabs">
                        <li role="presentation" class="active">
                            <a href="#project-list-view" role="tab" data-toggle="tab"><span class="icon fa-list"></span><span class="sr-only">{% trans %} project-list_view-list-label {% endtrans %}</span></a>
                        </li>
                        <li role="presentation">
                            <a href="#project-list-map" role="tab" data-toggle="tab"><span class="icon fa-map-marker"></span><span class="sr-only">{% trans %} project-list_view-map-label {% endtrans %}</span></a>
                        </li>
                    </ul>
                </div><!-- /.project-list-nav -->
            {% endif %}
            <div class="project-list-content tab-content">
                <div id="project-list-view" role="tabpanel" class="tab-pane active">
                    {% if settings.showFilters == true and filterItems is not empty %}
                        {{ projectList.renderFilterItems(filterItems, settings) }}
                        {{ projectList.renderListItems(projects, filterItems, settings) }}
                    {% else %}
                        {{ projectList.renderListItems(projects, false, settings) }}
                    {% endif %}

                    {% if settings.showPagination == true %}
                        {{ pagination.render(paginationSettings) }}
                    {% endif %}
                </div><!-- /#project-list-view.tab-pane -->
                {% if settings.showMap %}
                    <div id="project-list-map" role="tabpanel" class="tab-pane">
                        {{ projectList.renderMap(settings) }}
                    </div><!-- /#project-list-map.tab-pane -->
                {% endif %}
            </div><!-- /.project-list-content -->
        </div><!-- /.tabs -->
    </div><!-- /.project-list -->
{% endmacro %}

{# Render list of project list filters #}
{# @macro renderFilterItems #}
{# @param {Array} filtersItems A list of filters to use, e.g. projectList.defaults.filterItems #}
{# @param {Object} settings the Project List's settings #}
{% macro renderFilterItems(filterItems, settings) %}
    {% import _self as projectList %}

    {# Use default filterItems #}
    {% if settings.showFilters == true and filterItems is not empty %}
        <div class="project-list-filters">
            {# Render each filter item #}
            {% for filterItem in filterItems %}
                {{ projectList.renderFilterItem(filterItem, settings) }}
            {% endfor %}
        </div><!-- /.project-list-filters -->
    {% endif %}
{% endmacro %}

{# Render a single project list filter #}
{# @macro renderfilterItem #}
{# @param {Object} filterItem The filter item to display #}
{# @param {Object} settings the Project List's settings #}
{% macro renderFilterItem(filterItem, settings) %}
    <div class="project-list-item-{{ filterItem.column|e('html_attr') }} project-list-filter"{% if filterItem.sortBy != false %} data-sort-by="{{ filterItem.column|e('html_attr') }}"{% endif %}>
        <a href="javascript:;">{{ filterItem.label }}{% if filterItem.sortBy != false %}
                <span class="project-list-filter-order"></span>{% endif %}
        </a>
    </div><!-- /.project-list-filter -->
{% endmacro %}

{# Display project list map view #}
{# @macro renderMap #}
{# @param {Object} settings the Project List's settings #}
{% macro renderMap(settings) %}
    <div class="project-list-map">
        @TODO
    </div><!-- /.project-list-map -->
{% endmacro %}

{# Display project list items #}
{# @macro renderListItems #}
{# @param {Array} listItems The list of items to display #}
{# @param {Array} filterItems The list of filters to display #}
{# @param {Object} settings the Project List's settings #}
{% macro renderListItems(projects, filterItems, settings) %}
    {% import _self as projectList %}

    <div class="project-list-items">
        {% for project in projects %}
            {# Only show list item if settings support it #}
            {{ projectList.renderListItem(project, filterItems, settings) }}
        {% endfor %}
    </div><!-- /.project-list-items -->
{% endmacro %}

{# Display a single project list item #}
{# @macro renderListItem #}
{# @param {Object} listItem The list item to display #}
{# @param {Object} filterItems The list of filterItems to generate data-sort-{x} attributes with #}
{# @param {Object} settings the Project List's settings #}
{% macro renderListItem(project, filterItems, settings) %}
    {% import _self as projectList %}
    {% import '@UnilendFrontBundle/extensions/_general.macros.twig' as general %}

    {# Build data-sort-{column} attributes #}
    {% set sortAttrs = '' %}
    {% if settings.showFilters == true and filterItems is not empty %}
        {% for filterItem in filterItems %}
            {% if filterItem.sortBy != false %}
                {% set sortAttrs = sortAttrs ~ ' data-sort-' ~ (filterItem.column|e('html_attr')) ~ '="' ~ (listItem[filterItem.sortBy]|e('html_attr') ~ '"') %}
            {% endif %}
        {% endfor %}
    {% endif %}

    {# Set the rating class for the .rating element #}
    {% set classRating = project.risk|convertRisk|split('.')|join('-') %}

    {# Set CSS class to show expired project #}
    {% set classProjectExpired = '' %}
    {% if settings.markExpired == true and project.daysLeft == 0 %}
        {% set classProjectExpired = 'ui-project-expired' %}
    {% endif %}

    {# Set CSS class to show current user is involved in the project #}
    {% set classUserInvolved = '' %}
    {% if settings.markInvolved == true and project.currentUserInvolved == true %}
        {% set classUserInvolved = 'ui-current-user-involved' %}
    {% endif %}

    <article class="project-list-item {{ classProjectExpired }} {{ classUserInvolved }}"{{ sortAttrs }}>
        <div class="project-list-item-category">
            {{ general.projectCategoryIcon(project.company.sector) }}
            {% if project.photo_projet is not empty %}
                <div class="project-list-item-image" style="background-image:url('{{ project.photo_projet | completeProjectImagePath | escape('html_attr') }}')">
                    <img src="{{ project.photo_projet | completeProjectImagePath }}" alt="">
                </div>
            {% endif %}
        </div>
        <div class="project-list-item-info">
            <h3 class="project-list-item-title"><a href="{{ project.slug }}">{{ project.title}}</a></h3>
            <div class="project-list-item-meta">
                <h4 class="project-list-item-location">
                    <span class="icon fa-map-marker"></span> {{ project.company.city }}, {{ project.company.zip }}
                </h4>
                <h5 class="project-list-item-cost">{{ project.amount }}â‚¬</h5>
            </div>
            <div class="project-list-item-description">
                <p>{{ project.objectif_loan|raw|slice(0, 100) }}&hellip;</p>
            </div>
        </div>
        <div class="project-list-item-stats">
            <div class="project-list-item-interest">{{ project.avg_rate }} %</div>
            <div class="project-list-item-offers">
                <strong>{{ project.number_bids }}</strong> {% transchoice project.number_bids %}project-list_offer-label{% endtranschoice %}
            </div><!-- /.project-list-item-offers -->
            {% if project.currentUserOffers is defined and project.currentUserOffers | length > 0 %}
                <div class="project-list-item-useroffers">
                    {% for statusOffer, numOffers in project.currentUserOffers if numOffers > 0 %}
                        {% if statusOffer == constant('\bids::STATUS_BID_ACCEPTED') %}
                            <div class="project-list-item-useroffers-accepted">
                                {{ numOffers|__num|nbsp }} {% transchoice project.number_bids %} project-list_accepted-bids-label {% endtranschoice %}
                            </div><!-- /.project-list-item-useroffers-accepted -->
                        {% elseif statusOffer == constant('\bids::STATUS_BID_REJECTED') %}
                            <div class="project-list-item-useroffers-rejected">
                                {{ numOffers|__num|nbsp }} {% transchoice project.number_bids %} project-list_rejected-bids-label {% endtranschoice %}
                            </div><!-- /.project-list-item-useroffers-rejected -->
                        {% elseif statusOffer == constant('\bids::STATUS_BID_PENDING') %}
                            <div class="project-list-item-useroffers-inprogress">
                                {{ numOffers|__num|nbsp }} {% transchoice project.number_bids %} project-list_pending-bids-label {% endtranschoice %}
                            </div><!-- /.project-list-item-useroffers-inprogress -->
                        {% endif %}
                    {% endfor %}
                </div><!-- /.project-list-item-useroffers -->
            {% endif %}
        </div><!-- /.project-list-item-stats -->
        <div class="project-list-item-rating">
            <span class="rating rating-{{ classRating }}"><span class="sr-only"></span></span>
            {#__('Rated %d out of 5', 'projectListItemRatingLabel')|convertRisk|format(project.risk)#}
        </div>
        <div class="project-list-item-period">
            {% if project.daysLeft > 0 and project.daysLeft <= 2 %}
                <span class="icon fa-clock-o"></span>
                <span class="ui-time-count" data-time-count-to="{{ project.date_retrait_full|escape('html_attr') }}">&hellip;</span>
            {% elseif project.daysLeft == 0 %}
                {% trans %} project-list_project-finished {% endtrans %}
            {% else %}
                {% trans with {'%remainingDays%' : project.daysLeft } %} project-list_remaining-days {% endtrans %}
            {% endif %}
        </div>
        <div class="project-list-item-view">
            <a href="{{ project.slug }}"><span class="icon fa-angle-right"></span><span class="sr-only">{% trans %} project-list_view-project-label {% endtrans %}</span></a>
        </div>
        {# Feel free to do something better here #}
        <a href="{{ path('project_show', {'projectSlug' : project.slug }) }}" class="project-list-item-hotspot"></a>
    </article><!-- /.project-list-item -->
{% endmacro %}
