{% extends 'layout_basic.html.twig' %}

{% block pluginsCSS %}
    <link rel="stylesheet" href="{{ app.adminUrl }}/oneui/js/plugins/select2/select2.min.css">
    <link rel="stylesheet" href="{{ app.adminUrl }}/oneui/js/plugins/viewerjs/viewer.min.css">
    <style>
        .docview {
            position: relative;
        }

        .docview .block-options {
            position: absolute;
            right: 20px;
            top: 20px;
            z-index: 100;
        }

        .docview .block-options [data-action="fullscreen_toggle"] {
            visibility: hidden;
        }

        .docview-body {
            margin: 0;
        }

        .docview-form {
            text-align: center;
            margin-bottom: 1em;
        }

        .docview-viewer {
            width: 100%;
            min-height: 500px;
            position: relative;
            background: #fafafa;
        }

        .docview-viewer .docview-message {
            padding: 30px;
            text-align: center;
        }

        .docview-viewer img,
        .docview-viewer iframe {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }

        .docview-viewer .viewer-prev,
        .docview-viewer .viewer-next,
        .docview-viewer .viewer-play,
        .docview-viewer .viewer-flip-horizontal,
        .docview-viewer .viewer-flip-vertical {
            display: none;
        }
        .docview-viewer .viewer-toolbar {
            width: 150px;
        }

        .docview.block-opt-fullscreen .docview-viewer {
            height: 90vh;
        }

        @media screen and (max-width: 992px) {
            .docview-form:nth-child(2) {
                margin-top: 1em;
            }
        }
    </style>
{% endblock %}

{% block pluginsJS %}
    <script src="{{ app.adminUrl }}/oneui/js/plugins/select2/select2.min.js"></script>
    <script src="{{ app.adminUrl }}/oneui/js/plugins/viewerjs/viewer.min.js"></script>
{% endblock %}

{% block pageScripts %}
    <script>
        $(function () {
          var $doc = $(document)
          var Docview = {
              $elem: $('#docview'),
              imgViewers: [],
              settings: {
                pdfViewer: '{{ app.adminUrl }}/oneui/js/plugins/pdfjs/web/viewer.html'
              },
              render: function (fileUrl, index) {
                var $viewer = this.$elem.find('.docview-viewer').eq(index)

                // Unload the file
                if (!fileUrl || fileUrl === '') {
                  $viewer.html('<div class="docview-message">Sélectionnez un document à visualiser</div>')
                  return
                }

                // Determine if PDF or image
                if (/\.pdf$/i.test(fileUrl)) {
                  this.renderPdf(fileUrl, index)
                } else if (/\.(jpe?g|gif|png)$/i.test(fileUrl)) {
                  this.renderImg(fileUrl, index)
                } else {
                  $viewer.html('<div class="docview-message">Format de fichier non supporté par le viewer<br/><br/><strong><a href="' + fileUrl + '">Télécharger le fichier</a></strong></div>')
                }
              },
              renderImg: function (fileUrl, index) {
                var $viewer = this.$elem.find('.docview-viewer').eq(index)
                var $imgViewer = $viewer.find('img').length ? $viewer.find('img').first() : $('<img />')

                // Do nothing if already loaded
                if ($imgViewer.attr('src') === fileUrl) return

                // Setup viewer options for the image
                var imgViewerOptions = {
                  inline: true,
                  scalable: true,
                  movable: true,
                  navbar: false,
                  title: false,
                  transition: false,
                  built: function () {
                    $imgViewer.addClass('imgviewer')
                  }
                }

                // In case an error occurs
                $imgViewer.on('error', function () {
                  $viewer.html('<div class="docview-message">Erreur de chargement du document</div>')
                })

                // Set the image src attribute
                $imgViewer.attr('src', fileUrl)

                // Delete any previous image viewer for this index
                if (typeof this.imgViewers[index] !== 'undefined') this.imgViewers[index].destroy()

                // Append to the DOM
                if (!$viewer.find('img').length) {
                  $viewer.html('')
                  $imgViewer.appendTo($viewer)
                }

                // Create the new image viewer
                this.imgViewers[index] = new Viewer($imgViewer[0], imgViewerOptions)
              },
              renderPdf: function (fileUrl, index) {
                var $viewer = this.$elem.find('.docview-viewer').eq(index)
                var $pdfViewer = $viewer.find('iframe').length ? $viewer.find('iframe').first() : $('<iframe />')
                var viewFileUrl = this.settings.pdfViewer + '?file=' + encodeURIComponent(fileUrl)

                // Do nothing if already loaded
                if ($pdfViewer.attr('src') === viewFileUrl) return

                // In case an error occurs
                $pdfViewer.on('error', function () {
                  $viewer.html('<div class="docview-message">Erreur de chargement du document</div>')
                })

                // Set the iframe src attribute
                $pdfViewer.attr('src', viewFileUrl)

                // Append to the DOM
                if (!$viewer.find('iframe').length) {
                  $viewer.html('')
                  $pdfViewer.appendTo($viewer)
                }
              }
          }

          // Render a file within the viewer based on the switcher
          $doc.on('Docview:init change', '.docview-switcher', function () {
            var index = $(this).closest('.docview').first().find('.docview-switcher').index(this)
            var fileUrl = $(this).val()
            Docview.render(fileUrl, index)
          })

          // Force fullscreen
          $('[data-action="fullscreen_toggle"]').click()

          // Trigger loading the first document on DOM ready
          $('.docview-switcher:eq(0)').trigger('Docview:init')

          // Initialise select2
          $('.select2').select2({
              minimumResultsForSearch: 4
          })
        })
    </script>
{% endblock %}

{% block pageHeader %}
    <h1 class="page-heading push">
        Document viewer
    </h1>
{% endblock %}

{% block content %}
    <div id="docview" class="docview block block-bordered" style="min-width: 1000px; min-height: 500px;">
        <div class="docview-body block-content block-content-full">
            <ul class="block-options">
                <li>
                    <button type="button" data-toggle="block-option" data-action="fullscreen_toggle">
                        <i class="si si-size-fullscreen"></i>
                    </button>
                </li>
            </ul>
            <div class="row">
                <div class="col-md-6">
                    <div class="docview-form">
                        <select class="docview-switcher select2">
                            <option value="">Sélectionner un document ...</option>
                            {% for document in documents %}
                                {% set document = document.getAttachment() %}
                                <option value="{{ app.adminUrl }}/attachment/download/id/{{ document.getId() }}/file/{{ document.getPath()|url_encode }}"{% if document.getId() == currentDocumentId %} selected="selected"{% endif %}>
                                    {{ document.getType().getLabel() }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="docview-viewer">
                        <div class="docview-message">Chargement ...</div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="docview-form">
                        <select class="docview-switcher select2">
                            <option value="">Sélectionner un document ...</option>
                            {% for document in documents %}
                                {% set document = document.getAttachment() %}
                                <option value="{{ app.adminUrl }}/attachment/download/id/{{ document.getId() }}/file/{{ document.getPath()|url_encode }}">
                                    {{ document.getType().getLabel() }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="docview-viewer">
                        <div class="docview-message">Sélectionnez un document à visualiser</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
