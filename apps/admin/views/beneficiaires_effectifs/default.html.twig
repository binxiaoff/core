{% extends 'layout.html.twig' %}

{% block pluginsCSS %}
    <link rel="stylesheet" href="{{ app.adminUrl }}/oneui/js/plugins/bootstrap-datepicker/bootstrap-datepicker3.min.css">
    <link rel="stylesheet" href="{{ app.adminUrl }}/oneui/js/plugins/datatables/jquery.dataTables.min.css">
{% endblock %}

{% block pluginsJS %}
    <script src="{{ app.adminUrl }}/oneui/js/plugins/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
    <script src="{{ app.adminUrl }}/oneui/js/plugins/datatables/jquery.dataTables.min.js"></script>
{% endblock %}

{% set owner = {
id: 3032,
lastName: 'Dupont',
firstName: 'Rene',
type: 1,
percentage: 25,
birthDate: '18/12/1986',
birthPlace: 'Paris',
birthCountry: 1,
country: 1,
idAttachmentUrl: '/path/to/file/',
} %}

{% block pageScripts %}
    <script>
        $(function() {
            App.initHelpers(['validation', 'datepicker', 'datatables']);
            var $table = $('#beneficial-owners table')
            var $wrapper // The wrapper element will be stored here after DT init
            var $previewBlock = $('#preview-declaration')
            // Initialise DT
            $table.DT({
                // After init callback
                after: function() {
                    $wrapper = $table.closest('.dataTables_wrapper')
                    if ($table.find('.dataTables_empty').length) {
                        $wrapper.find('.add-btn').html('<span class="fa fa-plus"></span> Ajouter le dirigeant')
                    } else {
                        $previewBlock.removeClass('hide')
                    }
                },
                // After row added callback
                updated: function() {
                    if (!$table.find('.dataTables_empty').length) {
                        $wrapper.find('.add-btn').html('<span class="fa fa-plus"></span> Ajouter')
                        $previewBlock.removeClass('hide')
                    } else {
                        if (!$previewBlock.is('.hide'))
                            $previewBlock.addClass('hide')
                    }
                },
                // Modal open callback
                modal: function($modal) {
                    // Owner status and validation should not be editable
                    $modal.find('[name=status], [name=validation_type]').attr('type', 'hidden').siblings().hide()
                    // Set the datepicker to Year view
                    $modal.find('[name=birthdate]').datepicker('remove').datepicker({
                        startView: 'decade',
                        autoclose: true,
                        language: 'fr'
                    })
                    // When creating new owner
                    if ($modal.find('[name=action]').val() === 'create') {
                        // Append autocomplete ID field
                        $modal.find('.block-content').prepend(
                            '<div class="form-group content-mini content-mini-full bg-warning">' +
                                '<label>Rechercher le client dans la base existante.</label>' +
                                '<div class="input-group">' +
                                '<span class="input-group-addon"><i class="fa fa-search"></i></span>' +
                                '<input type="text" class="form-control" id="search-client-autocomplete" placeholder="Nom ou prÃ©nom">' +
                                '</div>' +
                            '</div>' +
                            '<hr>')
                        var $autocomplete = $modal.find('#search-client-autocomplete')
                        $autocomplete.autoComplete({
                            minChars: 2,
                            cache: 0,
                            delay: 500,
                            source: function (term, suggest) {
                                $.getJSON('{{ app.adminUrl }}/beneficiaires_effectifs/search_client/', {q: term}, function (response) {
                                    suggest(response)
                                })
                            },
                            renderItem: function (item, search, section) {
                                var html = '<div class="autocomplete-suggestion" data-id="' + item.id + '" data-first-name="' + item.firstName + '" data-last-name="' + item.lastName + '">' +
                                        '<p>' + item.firstName + ' ' + item.lastName + ' <span class="id">' + item.id + ' </span></p>' +
                                        '</div>'
                                return html
                            },
                            onSelect: function(e, term, item){
                                // Populate fields on select
                                $.each(item[0].dataset, function(key, value) {
                                    var key = key.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase() // Convert camelCase to lower dash
                                    $modal.find('[name=' + key + ']').val(value)
                                })
                                $modal.find('.autocomplete-suggestions').hide()
                                $autocomplete.val(item.data('first-name') + ' ' + item.data('last-name'))
                            },
                        })
                    }
                    // Prefill modal form for owner
                    if ($table.find('.dataTables_empty').length) {
                        {% if owner.firstName is defined and owner.lastName is defined %}
                        $modal.find('#search-client-autocomplete').val('{{ owner.firstName }} {{ owner.lastName }}')
                        {% endif %}
                        {% if owner.id is defined %}
                        $modal.find('[name=id]').val('{{ owner.id }}')
                        {% endif %}
                        {% if owner.lastName is defined %}
                        $modal.find('[name=last_name]').val('{{ owner.lastName }}')
                        {% endif %}
                        {% if owner.firstName is defined %}
                        $modal.find('[name=first_name]').val('{{ owner.firstName }}')
                        {% endif %}
                        {% if owner.type is defined %}
                        $modal.find('[name=type]').val('{{ owner.type }}')
                        {% endif %}
                        {% if owner.percentage is defined %}
                        $modal.find('[name=percentage]').val('{{ owner.percentage }}')
                        {% endif %}
                        {% if owner.birthdate is defined %}
                        $modal.find('[name=birthdate]').val('{{ owner.birthDate }}')
                        {% endif %}
                        {% if owner.birthplace is defined %}
                        $modal.find('[name=birthplace]').val('{{ owner.birthPlace }}')
                        {% endif %}
                        {% if owner.birthcountry is defined %}
                        $modal.find('[name=birth_country]').val('{{ owner.birthcountry }}')
                        {% endif %}
                        {% if owner.country is defined %}
                        $modal.find('[name=country]').val('{{ owner.country }}')
                        {% endif %}
                        {% if owner.idAttachmentUrl is defined %}
                            var $file =  $modal.find('[name=id_card_passport]')
                            var fileHtml = '<div class="clearfix"><div class="pull-left">' +
                                    '<div class="file">{{ owner.idAttachmentUrl }}</div>' +
                                    '<input type="hidden" name="id_card_passport" value="no_change"></div>' +
                                    '<div class="pull-left push-15-l"><a class="btn btn-xs btn-default file-edit-btn edit">Modifier</a></div></div>'
                            $file.parent().append(fileHtml)
                            $file.remove()
                        {% endif %}
                    }
                    // When deleting an owner from the table
                    if ($modal.find('[name=action]').val() === 'delete') {
                        var $form = $modal.find('form')
                        $form.submit(function(e){
                            e.preventDefault()
                            $.ajax({
                                url: $form.attr('action'),
                                type: $form.attr('method'),
                                data: $form.serialize(),
                                dataType: 'json',
                                success: function(response) {
                                    if (response.success) {
                                        // Reload the page, not sure why
                                        $modal.modal('hide')
                                        App.blocks('#beneficial-owners', 'state_loading')
                                        location.reload()
                                    } else {
                                        var errors = '<div class="alert">'
                                        $.each(response.error, function(i, val) {
                                            errors += '<p>' + val + '</p>'
                                        })
                                        errors += '</div>'
                                        $modal.find('.messages').html(errors)
                                    }
                                },
                                error: function() {
                                    $modal.find('.messages').html('<div class="alert">Une erreur s\'est produite.</div>')
                                }
                            })
                        })
                    }
                }
            })
        })
    </script>
{% endblock %}

{% block pageHeader %}
    <div class="row push">
        <div class="col-md-6">
            <h1 class="page-heading">
                {{ company.name }}
            </h1>
        </div>
        <div class="col-md-6 text-right">
            <a class="btn btn-default btn-sm" href="{{ app.adminUrl }}/emprunteurs/edit/{{ company.idClientOwner }}">Page emprunteur <span class="fa fa-chevron-right push-5-l"></span></a>
        </div>
    </div>
{% endblock %}

{% block content %}
    <div class="content">
        <div id="beneficial-owners" class="block block-bordered">
            <div class="block-header">
                <h3 class="block-title">Liste des bÃ©nÃ©ficiaires effectifs</h3>
            </div>
            <div class="block-content block-content-full">
                <table class="table table-striped table-hover table-bordered table-header-bg" data-table-editor data-table-editor-url="{{ app.adminUrl }}/beneficiaires_effectifs/edit" data-table-editor-actions="add, modify, delete" data-table-editor-hidden="id_declaration:{{ currentDeclaration.id }}, id_company:{{ company.idCompany }}">
                    <thead>
                    <tr>
                        <th data-editor-name="last_name" data-editor-type="text">Nom</th>
                        <th data-editor-name="first_name" data-editor-type="text">PrÃ©nom</th>
                        <th data-editor-name="type" data-editor-type="select" data-editor-options="{% for id, type in types %}{{ type|trim }}:{{ id|trim }}{% if loop.index < types|length %}, {% endif %}{% endfor %}" data-editor-optional>Type de bÃ©nÃ©ficiaire</th>
                        <th data-editor-name="percentage" data-editor-type="numerical" data-editor-optional>% dÃ©tenu</th>
                        <th data-editor-name="birthdate" data-editor-type="date">Date de naissance</th>
                        <th data-editor-name="birthplace" data-editor-type="text">Ville de naissance</th>
                        <th data-editor-name="birth_country" data-editor-type="select" data-editor-options="{% for id, country in countries %}{{ country|trim }}:{{ id|trim }}{% if loop.index < countries|length %}, {% endif %}{% endfor %}">Pays de naissance</th>
                        <th data-editor-name="country" data-editor-type="select" data-editor-options="{% for id, country in countries %}{{ country|trim }}:{{ id|trim }}{% if loop.index < countries|length %}, {% endif %}{% endfor %}">Pays de rÃ©sidence</th>
                        <th data-editor-name="id_card_passport" data-editor-type="file">PiÃ¨ce d'identitÃ©</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for owner in beneficial_owners %}
                        <tr data-id="{{ owner.id }}" data-state="{{ owner.status }}">
                            <td>{{ owner.last_name }}</td>
                            <td>{{ owner.first_name }}</td>
                            <td>{{ owner.type }}</td>
                            <td>{% if owner.percentage is not empty %}{{ owner.percentage|localizednumber }}{% endif %}</td>
                            <td>{{ owner.birthdate }}</td>
                            <td>{{ owner.birthplace }}</td>
                            <td>{{ owner.birth_country }}</td>
                            <td>{{ owner.country }}</td>
                            <td>{{ owner.id_card_passport }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>

                <div id="preview-declaration" class="hide">
                    <hr>
                    <a id="declaration-preview-btn" class="btn btn-primary" href="{{ app.adminUrl }}/beneficiaires_effectifs/declaration/{{ company.idCompany }}" target="_blank">PrÃ©visualiser la dÃ©claration</a>
                </div>
            </div>
        </div>

        <div id="declarations" class="block block-bordered">
            <div class="block-header">
                <h3 class="block-title">DÃ©clarations Ã  signer / signÃ©es</h3>
            </div>
            <div class="block-content block-content-full">
                {% if projectDeclarations is defined and projectDeclarations is not empty %}
                    <div class="content-mini content-mini-full bg-warning push">
                        <p class="push-5">Une dÃ©claration peut Ãªtre utilisÃ©e dans plusieurs projets.</p>
                        <p class="remove-margin">Si une dÃ©claration est archivÃ©e, le document signÃ© Ã©lectroniquement au moment du transfer des fonds sera toujours valide.</p>
                    </div>

                    {% if emailStatusErrors is defined and emailStatusErrors is not empty %}
                        <div class="alert">
                            {% for error in emailStatusErrors %}
                                {% if error is iterable %}
                                    <ul class="hide">
                                        {% for technicalError in error %}
                                            <li>{{ technicalError }}</li>
                                        {% endfor %}
                                    </ul>
                                {% else %}
                                    <p>{{ error }}</p>
                                {% endif %}
                            {% endfor %}
                        </div>
                    {% endif %}
                    {% if emailStatusSuccess is defined and emailStatusSuccess is not empty %}
                        <div class="alert alert-success">
                            <p>{{ emailStatusSuccess }}</p>
                        </div>
                    {% endif %}
                    <table class="table table-hover table-bordered table-header-bg push">
                        <thead>
                        <tr>
                            <th>ID projet</th>
                            <th>Nom du projet</th>
                            <th>Date d'ajout</th>
                            <th>Statut</th>
                            <th>Statut de la signature Ã©lectronique</th>
                            <th>Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for declaration in projectDeclarations %}
                            <tr>
                                <td><a href="{{ app.adminUrl }}/dossiers/edit/{{ declaration.idProject.idProject }}">{{ declaration.idProject.idProject }}</a></td>
                                <td><a href="{{ app.adminUrl }}/dossiers/edit/{{ declaration.idProject.idProject }}">{{ declaration.idProject.title }}</a></td>
                                <td>{{ declaration.idDeclaration.added|date('d/m/Y') }}</td>
                                <td>{{ "beneficial-owner_declaration-status-#{ declaration.idDeclaration.status }"|trans }}</td>
                                <td>{{ "universign_status-label-#{ declaration.status }"|trans }}</td>
                                <td class="text-center">
                                    {% if declaration.name is not empty %}
                                        <a href="{{ app.adminUrl }}/protected/beneficial_owner/{{ declaration.name }}" class="btn btn-default btn-xs" data-toggle="tooltip" title="TÃ©lÃ©charger la dÃ©claration"><span class="fa fa-download"></span></a>
                                    {% endif %}
                                    {% if declaration.status == constant('\\Unilend\\Bundle\\CoreBusinessBundle\\Entity\\UniversignEntityInterface::STATUS_PENDING') %}
                                        <a href="{{ app.adminUrl }}/beneficiaires_effectifs/send_email/{{ declaration.idDeclaration.idCompany.idCompany }}/{{ declaration.idProject.idProject }}" class="btn btn-default btn-xs" data-toggle="tooltip" title="Renvoyer l'email de signature"><span class="fa fa-envelope"></span></a>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% else %}
                    <p class="remove-margin">Aucune dÃ©claration Ã  signer / signÃ©e.</p>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}
